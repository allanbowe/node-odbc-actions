# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Binaries

on:
  push:
    branches: [ master ]

jobs:
  build-windows:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: build/stage/*.tar.gz

  build-ubuntu:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: build/stage/*.tar.gz

  build-macos:

    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci --production
    - name: Package Binary
      run: ./node_modules/.bin/node-pre-gyp package
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: build/stage/*.tar.gz

  create-release:

    runs-on: ubuntu-latest

    needs: [build-windows, build-ubuntu, build-macos]

    steps:

    - uses: actions/checkout@v2

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master

    - name: print package version
      run: echo ${{ steps.package-version.outputs.current-version}}

    - uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Display structure of downloaded files
      run: ls -R

    - name: Create Release 
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.current-version}}
        release_name: ${{ steps.package-version.outputs.current-version}}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip